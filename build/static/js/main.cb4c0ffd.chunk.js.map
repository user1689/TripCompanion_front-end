{"version":3,"sources":["shared/context/auth-context.jsx","shared/UIElements/LoadingSpinner.js","shared/UIElements/Backdrop.jsx","shared/UIElements/MainHeader.jsx","shared/UIElements/NavLinks.jsx","shared/UIElements/SideDrawer.jsx","shared/hooks/auth-hook.jsx","shared/UIElements/MainNavigation.jsx","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","x","logoutTimer","MainNavigation","useState","drawerIsOpen","toggleSideDrawer","turnDrawerClose","User","React","lazy","NewPlace","UserPlace","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate2","setTokenExpirationDate2","setUserId","useCallback","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","storedData","parse","getItem","console","log","remainingTime","setTimeout","clearTimeout","useAuth","path","component","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.cb4c0ffd.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react'\nimport './MainHeader.css'\n\nexport default function MainHeader(props) {\n  return (\n    <header className='main-header'>{props.children}</header>\n  );\n}\n","import React, { useContext } from 'react'\nimport './NavLinks.css'\nimport { NavLink } from 'react-router-dom'\nimport { AuthContext } from '../context/auth-context'\n\n\nexport default function NavLinks() {\n    const auth = useContext(AuthContext);\n  return (\n    <ul className='nav-links'>\n        <li>\n            <NavLink to='/' exact>ALL USERS</NavLink>\n        </li>\n        <li>\n            {auth.isLoggedIn && <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>}\n        </li>\n        <li>\n            {auth.isLoggedIn && <NavLink to='/places/new'>ADD PLACES</NavLink>}\n        </li>\n        <li>\n            {!auth.isLoggedIn && <NavLink to='/auth'>AUTHENTICATE</NavLink>}\n        </li>\n        <li>\n            {auth.isLoggedIn && <button onClick={auth.logout}>LOG OUT</button>}\n        </li>\n    </ul>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./SideDrawer.css\";\n\nexport default function SideDrawer(props) {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      {(x) => {return (<aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>);}}\n    </CSSTransition>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n}\n","import { useCallback, useEffect, useState } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(null);\n    const [tokenExpirationDate2, setTokenExpirationDate2] = useState(null);\n    const [userId, setUserId] = useState(null);\n\n    const login = useCallback((uid, token, expirationDate) => {\n        setToken(token);\n        const tokenExpirationDate =\n            expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n        setTokenExpirationDate2(tokenExpirationDate);\n        localStorage.setItem(\n            \"userData\",\n            JSON.stringify({\n                userId: uid,\n                token: token,\n                expiration: tokenExpirationDate.toISOString(),\n            })\n        );\n        setUserId(uid);\n    }, []);\n\n    const logout = useCallback(() => {\n        setToken(null);\n        setTokenExpirationDate2(null);\n        setUserId(null);\n        localStorage.removeItem(\"userData\");\n    }, []);\n\n    useEffect(() => {\n        const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n        if (\n            storedData &&\n            storedData.token &&\n            new Date(storedData.expiration) > new Date()\n        ) {\n            login(\n                storedData.userId,\n                storedData.token,\n                new Date(storedData.expiration)\n            );\n        }\n    }, [login]);\n\n    useEffect(() => {\n        if (token && tokenExpirationDate2) {\n            console.log(\"setTimer1\");\n            const remainingTime =\n                tokenExpirationDate2.getTime() - new Date().getTime();\n            logoutTimer = setTimeout(logout, remainingTime);\n        } else {\n            console.log(\"setTimer2\");\n            clearTimeout(logoutTimer);\n        }\n    }, [token, logout, tokenExpirationDate2]);\n\n    return {token, login, logout, userId};\n};\n\n ","import React, { Fragment, useState } from \"react\";\nimport \"./MainNavigation.css\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"./Backdrop\";\n\nexport default function MainNavigation(props) {\n  const [drawerIsOpen, toggleSideDrawer] = useState(false);\n  function turnDrawerOpen() {\n    toggleSideDrawer(true);\n  }\n  const turnDrawerClose = () => {\n    toggleSideDrawer(false);\n  };\n  return (\n    <Fragment>\n      {drawerIsOpen ? <Backdrop onClick={turnDrawerClose}></Backdrop> : null}\n\n      <SideDrawer show={drawerIsOpen} onClick={turnDrawerClose}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks/>\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={turnDrawerOpen}>\n          <span></span>\n          <span></span>\n          <span></span>\n        </button>\n        <h2 className=\"main-navigation__title\">YourPlaces</h2>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </Fragment>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'\n\nimport MainNavigation from './shared/UIElements/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport LoadingSpinner from './shared/UIElements/LoadingSpinner';\n\nconst User = React.lazy(() => import('./User/pages/User'));\nconst NewPlace = React.lazy(() => import('./Places/pages/NewPlace'));\nconst UserPlace = React.lazy(() => import('./Places/pages/UserPlace'));\nconst UpdatePlace = React.lazy(() => import('./Places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./User/pages/Auth'));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' component={User} exact />\n        <Route path='/:userId/places' component={UserPlace} exact />\n        <Route path='/places/new' component={NewPlace} exact />\n        <Route path='/places/:placeId' component={UpdatePlace} exact />\n        <Redirect to='/'></Redirect>\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' component={User} exact />\n        <Route path='/:userId/places' component={UserPlace} exact />\n        <Route path='/auth' component={Auth} exact></Route>\n        <Redirect to='/auth'></Redirect>\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider value={{ isLoggedIn: !!token, token: token, userId, login, logout }}>\n      <BrowserRouter>\n        <MainNavigation></MainNavigation>\n        <main>\n\n          {/* <Route path='/places' exact/> */}\n          <Suspense fallback={<div className=\"center\"><LoadingSpinner/></div>}>{routes}</Suspense>\n\n        </main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}