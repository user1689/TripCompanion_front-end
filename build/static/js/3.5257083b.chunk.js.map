{"version":3,"sources":["shared/FormElements/Button.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/UIElements/ErrorModal.js","shared/UIElements/Modal.jsx","shared/hooks/http-hook.jsx","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/FormElements/Input.jsx","shared/hooks/form-hook.jsx","shared/UIElements/ImageUpload.jsx","User/pages/Auth.jsx"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","onCancel","onClear","header","show","footer","ModalOverlay","content","style","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqController","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","target","i","length","source","getOwnPropertyDescriptors","defineProperties","defineProperty","Card","_defineProperty","obj","configurable","writable","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","e","_e","f","TypeError","it","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","preState","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","id","onInput","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","ImageUpload","fileRef","file","setFile","preViewUrl","setPreViewUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","console","log","pickedFile","fileIsValid","files","center","src","alt","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","email","password","InputHandler","setFormData","authSubmitHandler","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","asOverlay","valid","prevMode"],"mappings":"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","file":"static/js/3.5257083b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\nimport Backdrop from \"../UIElements/Backdrop\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst ModalOverlay = (props) => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.className}`}>\n                <h2>{props.header}</h2>\n            </header>\n            {/* prevent automatically submission if we add button */}\n            <form\n                onSubmit={\n                    props.onSubmit\n                        ? props.onSubmit\n                        : (event) => event.preventDefault()\n                }\n            >\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    );\n\n    return ReactDOM.createPortal(\n        content,\n        document.getElementById(\"modal-hook\")\n    );\n};\n\nexport default function Modal(props) {\n    return (\n        <React.Fragment>\n            {props.show && <Backdrop onClick={props.onCancel}></Backdrop>}\n            <CSSTransition\n                in={props.show}\n                mountOnEnter\n                unmountOnExit\n                timeout={200}\n                classNames=\"modal\"\n            >\n                <ModalOverlay {...props}>\n                    \n                </ModalOverlay>\n            </CSSTransition>\n        </React.Fragment>\n    );\n}\n","import { useCallback, useRef, useState, useEffect } from \"react\";\n\nexport default function useHttpClient() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(\n        async (url, method = \"GET\", body = null, headers = {}) => {\n            setIsLoading(true);\n            const httpAbortController = new AbortController();\n            activeHttpRequests.current.push(httpAbortController);\n            try {\n                const response = await fetch(url, {\n                    method,\n                    body,\n                    headers,\n                    signal: httpAbortController.signal\n                });\n\n                const responseData = await response.json();\n\n                activeHttpRequests.current = activeHttpRequests.current.filter(reqController => reqController !== httpAbortController)\n\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                }\n                setIsLoading(false);\n                return responseData;\n            } catch (error) {\n                setError(error.message);\n                setIsLoading(false);\n                throw error;\n            }\n        },\n        []\n    );\n\n    const clearError = () => {\n        setError(null);\n    };\n\n    useEffect(() => {\n      return () => {\n        // component will unmount\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n      };\n    }, []);\n    return { isLoading, error, sendRequest, clearError };\n}\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useEffect, useReducer } from \"react\";\n\nimport \"./Input.css\";\nimport { validate } from \"../util/validators\";\n\n// initState = {value: '', isValid: false}\nconst inputReducer = (preState, action) => {\n    // console.log(preState);\n    switch (action.type) {\n        case \"CHANGE\":\n            return {\n                ...preState,\n                value: action.val,\n                isValid: validate(action.val, action.validators),\n            };\n        case \"TOUCH\":\n            return {\n                ...preState,\n                isTouched: true\n            }\n        default:\n            return preState;\n    }\n};\n\nexport default function Input(props) {\n    // store\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue || \"\",\n        isTouched: false,\n        isValid: props.initialValid || false,\n    });\n\n    const changeHandler = (event) => {\n        // action(changeHandler -> event.target.value) -> store (dispatch)-> reducer -> state -> <input value={state.value}>\n        dispatch({\n            type: \"CHANGE\",\n            val: event.target.value,\n            validators: props.validators,\n        });\n    };\n\n    const touchHandler = (event) => {\n        dispatch({\n            type: \"TOUCH\",\n        });\n    }\n\n    const {isValid, value} = inputState;\n    const {id, onInput} = props;\n    useEffect(() => {\n        onInput(id, value, isValid);\n    }, [id, value, isValid, onInput]);\n\n    const element =\n        props.element === \"input\" ? (\n            <input\n                id={props.id}\n                type={props.type}\n                placeholder={props.placeholder}\n                onChange={changeHandler}\n                onBlur={touchHandler}\n                value={inputState.value}\n            />\n        ) : (\n            <textarea\n                id={props.id}\n                rows={props.rows || 3}\n                onChange={changeHandler}\n                onBlur={touchHandler}\n                value={inputState.value}\n            ></textarea>\n        );\n\n    return (\n        <div\n            className={`form-control ${\n                !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n            }`}\n        >\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    );\n}\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (preState, action) => {\n    // console.log(action);\n    switch (action.type) {\n        case \"INPUT_CHANGE\":\n            let formIsValid = true;\n            // console.log(preState.inputs['title']);\n            for (const inputId in preState.inputs) {\n                if (!preState.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid =\n                        formIsValid && preState.inputs[inputId].isValid;\n                }\n            }\n            // console.log('@',{...preState});\n            return {\n                ...preState,\n                inputs: {\n                    ...preState.inputs,\n                    [action.inputId]: {\n                        value: action.value,\n                        isValid: action.isValid,\n                    },\n                },\n                isValid: formIsValid,\n            };\n        case \"SET_DATA\": \n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            }\n        default:\n            return preState;\n    }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity,\n    });\n\n    // useCallback makes the function unchanged\n    const InputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: \"INPUT_CHANGE\",\n            value: value,\n            isValid: isValid,\n            inputId: id,\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: \"SET_DATA\",\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    // function will no be created\n    }, []);\n\n    return [formState, InputHandler, setFormData];\n\n    \n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Button from \"../FormElements/Button\";\nimport \"./ImageUpload.css\";\n\nexport default function ImageUpload(props) {\n    const fileRef = useRef();\n    const [file, setFile] = useState(null);\n    const [preViewUrl, setPreViewUrl] = useState(null);\n    const [isValid, setIsValid] = useState(false);\n    const pickImageHander = () => {\n        fileRef.current.click();\n    };\n    useEffect(() => {\n      if (!file) {\n        return ;\n      }\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        setPreViewUrl(fileReader.result);\n      };\n      fileReader.readAsDataURL(file);\n    }, [file]);\n    const pickedHandler = (event) => {\n        console.log(event);\n        let pickedFile = null;\n        let fileIsValid = isValid;\n        if (event.target.files || event.target.files.length === 1) {\n          pickedFile = event.target.files[0];\n          console.log(pickedFile);\n          setFile(pickedFile);\n          setIsValid(true);\n          fileIsValid = true;\n        } else {\n          setIsValid(false);\n          fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid);\n    };\n    return (\n        <div className=\"form-control\">\n            <input\n                id={props.id}\n                ref={fileRef}\n                type=\"file\"\n                style={{ display: \"none\" }}\n                accept=\".jpg,.jpeg,.png\"\n                onChange={pickedHandler}\n            />\n            <div className={`image-upload ${props.center && \"center\"}`}>\n                <div className=\"image-upload__preview\">\n                    {preViewUrl && <img src={preViewUrl} alt=\"Preview\"/>}\n                    {!preViewUrl && <p>please pick an image.</p>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHander}>\n                    PICK IMAGE\n                </Button>\n            </div>\n            {!isValid && <p>{props.errorText}</p> }\n        </div>\n    );\n}\n","import React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport Button from \"../../shared/FormElements/Button\";\nimport Input from \"../../shared/FormElements/Input\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport Card from \"../../shared/UIElements/Card\";\nimport LoadingSpinner from \"../../shared/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/UIElements/ErrorModal\";\nimport useHttpClient from \"../../shared/hooks/http-hook\";\n\nimport {\n    VALIDATOR_EMAIL,\n    VALIDATOR_MINLENGTH,\n    VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\n\nimport \"./Auth.css\";\nimport ImageUpload from \"../../shared/UIElements/ImageUpload\";\n\nexport default function Auth() {\n    const auth = useContext(AuthContext);\n    const [isLoginMode, setIsLoginMode] = useState(true);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const [formState, InputHandler, setFormData] = useForm(\n        {\n            email: {\n                value: \"\",\n                isValid: false,\n            },\n            password: {\n                value: \"\",\n                isValid: false,\n            },\n        },\n        false\n    );\n    const authSubmitHandler = async (event) => {\n        event.preventDefault();\n        // console.log(formState.inputs);\n        if (isLoginMode) {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n                    \"POST\",\n                    JSON.stringify({\n                        email: formState.inputs.email.value,\n                        password: formState.inputs.password.value,\n                    }),\n                    {\n                        \"Content-Type\": \"application/json\",\n                    }\n                );\n                // setIsLoading(false);\n                auth.login(responseData.userId, responseData.token);\n            } catch (error) {\n                // setIsLoading(false);\n                // setError(\n                //     error.message || \"Something went wrong, please try again\"\n                // );\n            }\n        } else {\n            try {\n                const formData = new FormData();\n                formData.append(\"email\", formState.inputs.email.value);\n                formData.append(\"name\", formState.inputs.name.value);\n                formData.append(\"password\", formState.inputs.password.value);\n                formData.append(\"image\", formState.inputs.image.value);\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n                    \"POST\",\n                    // JSON.stringify({\n                    //     name: formState.inputs.name.value,\n                    //     email: formState.inputs.email.value,\n                    //     password: formState.inputs.password.value,\n                    // }),\n                    formData\n                    // {\n                    //     \"Content-Type\": \"application/json\",\n                    // }\n                );\n                // const responseData = await response.json();\n                // if (!response.ok) {\n                //     throw new Error(responseData.message);\n                // }\n                // setIsLoading(false);\n                auth.login(responseData.userId, responseData.token);\n            } catch (error) {\n                // setIsLoading(false);\n                // setError(\n                //     error.message || \"Something went wrong, please try again\"\n                // );\n            }\n        }\n    };\n    const switchModeHandler = (event) => {\n        event.preventDefault();\n        if (!isLoginMode) {\n            // sign up mode\n            setFormData(\n                {\n                    ...formState.inputs,\n                    name: undefined,\n                    image: undefined,\n                },\n                formState.inputs.email.isValid &&\n                    formState.inputs.password.isValid\n            );\n        } else {\n            // login mode\n            setFormData(\n                {\n                    ...formState.inputs,\n                    name: {\n                        value: \"\",\n                        valid: false,\n                    },\n                    image: {\n                        value: null,\n                        valid: false\n                    },\n                },\n                false\n            );\n        }\n        setIsLoginMode((prevMode) => !prevMode);\n    };\n    const errorHandler = () => {\n        clearError();\n    };\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={errorHandler}></ErrorModal>\n            <Card className=\"authentication\">\n                {isLoading && <LoadingSpinner asOverlay />}\n                <h2>Login Required</h2>\n                <hr />\n                <form onSubmit={authSubmitHandler}>\n                    {!isLoginMode && (\n                        <Input\n                            element=\"input\"\n                            id=\"name\"\n                            type=\"text\"\n                            label=\"Your Name\"\n                            onInput={InputHandler}\n                            validators={[VALIDATOR_REQUIRE()]}\n                        />\n                    )}\n                    {!isLoginMode && (\n                        <ImageUpload\n                            center\n                            id=\"image\"\n                            onInput={InputHandler}\n                            // errorText=\"Please provide an image\"\n                        />\n                    )}\n                    <Input\n                        id=\"email\"\n                        type=\"text\"\n                        element=\"input\"\n                        label=\"E-mail\"\n                        onInput={InputHandler}\n                        errorText=\"Please enter a valid email address.\"\n                        validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n                    ></Input>\n                    <Input\n                        id=\"password\"\n                        type=\"text\"\n                        element=\"input\"\n                        label=\"Password\"\n                        onInput={InputHandler}\n                        errorText=\"Please enter a valid password, at least 5 characters.\"\n                        validators={[\n                            VALIDATOR_REQUIRE(),\n                            VALIDATOR_MINLENGTH(5),\n                        ]}\n                    ></Input>\n                    <Button type=\"submit\" disabled={!formState.isValid}>\n                        {isLoginMode ? \"LOG IN\" : \"SIGN UP\"}\n                    </Button>\n                    <Button inverse onClick={switchModeHandler}>\n                        SWITCH TO {isLoginMode ? \"SIGN UP\" : \"LOG IN\"}\n                    </Button>\n                </form>\n            </Card>\n        </React.Fragment>\n    );\n}\n"],"sourceRoot":""}