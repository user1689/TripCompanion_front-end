{"version":3,"sources":["shared/FormElements/Button.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/UIElements/ErrorModal.js","shared/UIElements/Modal.jsx","shared/hooks/http-hook.jsx","shared/UIElements/Card.js","shared/UIElements/Avatar.js","User/components/UserItem.jsx","User/components/UserList.jsx","User/pages/User.jsx"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","onCancel","onClear","header","show","footer","ModalOverlay","content","style","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqController","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","Avatar","src","image","alt","width","height","UserItem","id","process","name","places","length","UserList","items","map","user","User","loadedUsers","setLoadedUsers","users","fetchUsers","isClear","LoadingSpinner"],"mappings":"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","file":"static/js/7.7c62723c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\nimport Backdrop from \"../UIElements/Backdrop\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst ModalOverlay = (props) => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.className}`}>\n                <h2>{props.header}</h2>\n            </header>\n            {/* prevent automatically submission if we add button */}\n            <form\n                onSubmit={\n                    props.onSubmit\n                        ? props.onSubmit\n                        : (event) => event.preventDefault()\n                }\n            >\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    );\n\n    return ReactDOM.createPortal(\n        content,\n        document.getElementById(\"modal-hook\")\n    );\n};\n\nexport default function Modal(props) {\n    return (\n        <React.Fragment>\n            {props.show && <Backdrop onClick={props.onCancel}></Backdrop>}\n            <CSSTransition\n                in={props.show}\n                mountOnEnter\n                unmountOnExit\n                timeout={200}\n                classNames=\"modal\"\n            >\n                <ModalOverlay {...props}>\n                    \n                </ModalOverlay>\n            </CSSTransition>\n        </React.Fragment>\n    );\n}\n","import { useCallback, useRef, useState, useEffect } from \"react\";\n\nexport default function useHttpClient() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(\n        async (url, method = \"GET\", body = null, headers = {}) => {\n            setIsLoading(true);\n            const httpAbortController = new AbortController();\n            activeHttpRequests.current.push(httpAbortController);\n            try {\n                const response = await fetch(url, {\n                    method,\n                    body,\n                    headers,\n                    signal: httpAbortController.signal\n                });\n\n                const responseData = await response.json();\n\n                activeHttpRequests.current = activeHttpRequests.current.filter(reqController => reqController !== httpAbortController)\n\n                if (!response.ok) {\n                    throw new Error(responseData.message);\n                }\n                setIsLoading(false);\n                return responseData;\n            } catch (error) {\n                setError(error.message);\n                setIsLoading(false);\n                throw error;\n            }\n        },\n        []\n    );\n\n    const clearError = () => {\n        setError(null);\n    };\n\n    useEffect(() => {\n      return () => {\n        // component will unmount\n        activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n      };\n    }, []);\n    return { isLoading, error, sendRequest, clearError };\n}\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react'\nimport './UserItem.css'\n\nimport Avatar from '../../shared/UIElements/Avatar';\nimport Card from '../../shared/UIElements/Card';\n\nimport { Link } from 'react-router-dom';\n\nexport default function UserItem(props) {\n    // console.log(props);\n    // console.log(props);\n    return (\n        <li className='user-item'>\n            <Card className='user-item__content'>\n                <Link to={`/${props.id}/places`}>\n                    <div className='user-item__image'>\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n                    </div>\n                    <div className='user-item__info'>\n                        <h2>{props.name}</h2>\n                        <h3>{props.places.length} {props.places.length <= 1 ? 'place' : 'places'}</h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    )\n}\n","import React from 'react'\nimport './UserList.css'\nimport UserItem from './UserItem'\n\nexport default function UserList(props) {\n    \n    if (props.items.length === 0 || props.items === null) {\n        return (\n            <div className='center'>No users found</div>\n        )\n    }\n\n    return (\n        <ul className='users-list'>\n\n            {\n                props.items.map((user) => {\n                    return <UserItem key={user.id} {...user} />;\n                })\n            }\n\n        </ul>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport ErrorModal from \"../../shared/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/UIElements/LoadingSpinner\";\nimport UserList from \"../components/UserList\";\nimport useHttpClient from \"../../shared/hooks/http-hook\";\n\n\nfunction User() {\n    // const [isLoading, setIsLoading] = useState(false);\n    // const [error, setError] = useState(null);\n    const [loadedUsers, setLoadedUsers] = useState(null);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient(); \n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            // setIsLoading(true);\n            try {\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users`);\n                // const responseData = await response.json();\n\n                // if (!response.ok) {\n                //     throw new Error(responseData.message);\n                // }\n\n                // setIsLoading(false);\n                setLoadedUsers(responseData.users);\n            } catch (error) {\n                // setIsLoading(false);\n                // setError(error.message);\n            }\n        };\n        fetchUsers();\n    }, [sendRequest]);\n    const errorHandler = () => {\n        // setError(null);\n        clearError();\n    };\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} isClear={errorHandler} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            <div>\n                {!isLoading && loadedUsers && <UserList items={loadedUsers} />}\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default User;\n"],"sourceRoot":""}